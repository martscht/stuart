% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/combinations.R
\name{combinations}
\alias{combinations}
\title{Compute the number of possible subtest combinations}
\usage{
combinations(data, factor.structure, number.of.subtests = 1,
  items.per.subtest = NULL, repeated.measures = NULL, mtmm = NULL, ...)
}
\arguments{
\item{data}{A data.frame containing all relevant data.}

\item{factor.structure}{A list linking factors to items. The names of the list elements correspond to the factor names. Each list element must contain a character-vector of item names that are indicators of this factor.}

\item{number.of.subtests}{A vector containing the number of subtests per construct. This must be in the same order as the \code{factor.structure} provided. If a single number, it is applied to all constructs. The default is to construct 1 subtest per construct.}

\item{items.per.subtest}{A list containing the number of items per subtest. This must be in the same order as the \code{factor.structure} provided. If a single number, it is applied to all subtests. If \code{NULL} all items are evenly distributed among the subtests.}

\item{repeated.measures}{A list linking factors that are repeated measures of each other. Repeated factors must be in one element of the list - other sets of factors in other elements of the list. When this is \code{NULL} (the default) a cross-sectional model is estimated.}
}
\value{
Returns the number of possible subtest constellations.
}
\description{
Used to compute the number of possible subtest constellations prior to running either \code{\link{mmas}} or \code{\link{bruteforce}}.
}
\examples{
# Compute the number of possible short-version combinations
# for two constructs with 4 items each
data(fairplayer)

fs <- list(SI=names(fairplayer)[2:11],
  EM=names(fairplayer)[32:39])

combinations(fairplayer, fs, 1, 4)
 
}
\author{
Martin Schultze
}
\seealso{
\code{\link{mmas}} \code{\link{bruteforce}}
}
\concept{
ACO subtests
}

